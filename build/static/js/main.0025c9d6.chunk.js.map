{"version":3,"sources":["components/Burger/BurgerIngredient/BurgerIngredient.module.css","components/Navigation/SideDrawer/SideDrawer.module.css","containers/Checkout/ContactData/ContactData.module.css","components/Burger/BuildControls/BuildControl/BuildControl.module.css","components/Navigation/ToolBar/ToolBar.module.css","components/Navigation/NavigationItems/NavigationItem/NavigationItem.module.css","components/Burger/BuildControls/BuildControls.module.css","components/UI/Button/Button.module.css","components/Layout/Layout.module.css","components/Logo/Logo.module.css","assets/images/burger-logo.png","components/Navigation/NavigationItems/NavigationItems.module.css","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.module.css","components/UI/BackDrop/BackDrop.module.css","components/Burger/Burger.module.css","components/UI/Modal/Modal.module.css","components/UI/Spinner/Spinner.module.css","components/Order/CheckoutSummary/CheckoutSummary.module.css","components/Order/Order.module.css","containers/Auth/Auth.module.css","components/Logo/Logo.js","components/Navigation/NavigationItems/NavigationItem/NavigationItem.js","components/Navigation/NavigationItems/NavigationItems.js","components/Navigation/SideDrawer/DrawerToggle/DrawerToggle.js","components/Navigation/ToolBar/ToolBar.js","components/UI/BackDrop/BackDrop.js","components/Navigation/SideDrawer/SideDrawer.js","components/Layout/Layout.js","components/Burger/BurgerIngredient/BurgerIngredient.js","components/Burger/Burger.js","components/Burger/BuildControls/BuildControl/BuildControl.js","components/Burger/BuildControls/BuildControls.js","components/UI/Button/Button.js","components/Burger/OrderSummary/OrderSummary.js","components/UI/Modal/Modal.js","axios-orders.js","components/UI/Spinner/Spinner.js","hoc/withErrorHandler.js","fireBaseConfig.js","store/actions/auth.js","store/actions/actionTypes.js","containers/BurgerBuilder/BurgerBuilder.js","store/actions/burgerBuilder.js","store/actions/order.js","components/Order/CheckoutSummary/CheckoutSummary.js","containers/Checkout/ContactData/ContactData.js","containers/Checkout/Checkout.js","components/Order/Order.js","containers/Orders/Orders.js","containers/Auth/Auth.js","containers/Auth/Logout.js","App.js","serviceWorker.js","store/reducers/burgerBuilder.js","store/reducers/order.js","store/reducers/auth.js","index.js"],"names":["module","exports","BreadBottom","BreadTop","Seeds1","Seeds2","Meat","Cheese","Salad","Bacon","SideDrawer","Open","Close","Logo","ContactData","BuildControl","Label","Less","More","ToolBar","DesktopOnly","NavigationItem","active","BuildControls","OrderButton","enable","Button","Success","Danger","Content","__webpack_require__","p","NavigationItems","DrawerToggle","BackDrop","Burger","Modal","Spinner","load3","CheckoutSummary","Order","Auth","props","console","log","prototype","react_default","a","createElement","className","classes","src","burgerLogo","alt","react_router_dom","to","link","activeClassName","exact","children","NavigationItems_NavigationItem_NavigationItem","isAuthenticated","react","onClick","clicked","SideDrawer_DrawerToggle_DrawerToggle","drawerToggleClicked","components_Logo_Logo","Navigation_NavigationItems_NavigationItems","show","attachedClasses","open","UI_BackDrop_BackDrop","closed","join","Layout","state","showSideDrawer","sideDrawerCloseHandler","_this","setState","sideDrawerToggleHandler","prevState","Navigation_ToolBar_ToolBar","this","Navigation_SideDrawer_SideDrawer","Component","connect","ownProps","auth","token","BurgerIngredient","_ref","ingredient","type","ingredients","transFormIngredients","Object","keys","map","toConsumableArray","Array","_","i","Burger_BurgerIngredient_BurgerIngredient","key","reduce","arr","el","concat","length","label","removed","disabled","added","controls","price","toFixed","control","BuildControls_BuildControl_BuildControl","ingredientAdded","ingredientRemoved","purchasable","ordered","isAuth","btnType","OrderSummary","ingreidentSummary","igKey","style","textTransform","UI_Button_Button","purchaseCanceled","purchaseContinued","memo","modalClosed","transform","opacity","prevProps","nextProps","instance","axios","create","baseURL","withErrorHandler","WrappedComponent","displayError","arguments","undefined","_Component","_temp","_getPrototypeOf2","classCallCheck","_len","args","_key","possibleConstructorReturn","getPrototypeOf","call","apply","error","requestInterceptor","interceptors","request","use","Promise","reject","responseInterceptor","response","errorConfirmedHandler","inherits","createClass","value","eject","UI_Modal_Modal","message","apiKey","process","authSuccess","idToken","userId","logout","localStorage","removeItem","checkAuthTimeOut","expiry","dispatch","setTimeout","setAuthRedirect","path","BurgerBuilder","purchasing","purchaseHandler","onSetAuthRedirect","history","push","purchaseCancelHandler","purchaseContinueHandler","onInitPurchase","loadIngredients","sum","disabledInfo","objectSpread","orderSummary","burger","UI_Spinner_Spinner","components_Burger_Burger","Burger_BuildControls_BuildControls","onIngredientAdded","onIngredientRemoved","updatePurchaseState","Burger_OrderSummary_OrderSummary","isFetching","burgerBuilder","totalPrice","ingName","ingeredientName","get","then","res","data","catch","width","margin","checkoutCancelled","checkoutContinued","name","email","address","street","postalCode","orderHandler","event","preventDefault","order","customer","zipCode","country","deliveryMethod","orderBurger","form","Input","placeholder","orderData","post","id","orderId","purchaseBurgerSuccess","purchaseBurgerFail","purchaseBurger","Checkout","checkoutCancelledHandler","goBack","checkoutContinuedHandler","replace","match","summary","react_router","purchaseRedirect","purchased","Order_CheckoutSummary_CheckoutSummary","component","ingredientName","amount","ingredientOutput","ig","display","border","padding","Number","parseFloat","Orders","onFetchOrders","orders","components_Order_Order","queryParams","fetchedOrders","fetchOrdersFail","fetchOrders","withErrorhandler","isSignup","submitHandler","onAuth","switchSignUpHandler","buildingBurger","authRedirectPath","onSetRedirectPath","loginForm","onSubmit","errorMessage","authRedirect","building","password","isSignUp","url","authData","returnSecureToken","expirationDate","Date","getTime","expiresIn","setItem","localId","err","Logout","App","onCheckAuth","routes","components_Layout_Layout","withRouter","getItem","Boolean","window","location","hostname","initialState","INGREDEINT_PRICES","cheese","salad","meat","bacon","reducer","action","defineProperty","newOrder","middlewares","thunk","createLogger","rootReducer","combineReducers","burgerReducer","orderReducer","authReducer","store","createStore","composeWithDevTools","applyMiddleware","app","es","src_App","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0025c9d6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"BreadBottom\":\"BurgerIngredient_BreadBottom__utE3h\",\"BreadTop\":\"BurgerIngredient_BreadTop__2yRKB\",\"Seeds1\":\"BurgerIngredient_Seeds1__3ht9Q\",\"Seeds2\":\"BurgerIngredient_Seeds2__15_zi\",\"Meat\":\"BurgerIngredient_Meat__2h-bp\",\"Cheese\":\"BurgerIngredient_Cheese__2-6Kr\",\"Salad\":\"BurgerIngredient_Salad__1-4-3\",\"Bacon\":\"BurgerIngredient_Bacon__1vhgi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"SideDrawer\":\"SideDrawer_SideDrawer__1ctXO\",\"Open\":\"SideDrawer_Open__CTPag\",\"Close\":\"SideDrawer_Close__1e1Qv\",\"Logo\":\"SideDrawer_Logo__6VWDu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactData\":\"ContactData_ContactData__mmab2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControl\":\"BuildControl_BuildControl__3lg12\",\"Label\":\"BuildControl_Label__-LA40\",\"Less\":\"BuildControl_Less__1MfER\",\"More\":\"BuildControl_More__3dZRY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ToolBar\":\"ToolBar_ToolBar__hmftM\",\"Logo\":\"ToolBar_Logo__JmpyZ\",\"DesktopOnly\":\"ToolBar_DesktopOnly__QUGOi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItem\":\"NavigationItem_NavigationItem__20EnY\",\"active\":\"NavigationItem_active__27kAZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BuildControls\":\"BuildControls_BuildControls__3z63g\",\"OrderButton\":\"BuildControls_OrderButton__3X0iJ\",\"enable\":\"BuildControls_enable__Uj9ub\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button_Button__2EBAc\",\"Success\":\"Button_Success__2PBor\",\"Danger\":\"Button_Danger__8JYl_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Content\":\"Layout_Content__Yl1Oe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Logo\":\"Logo_Logo__2qUJx\"};","module.exports = __webpack_public_path__ + \"static/media/burger-logo.b8503d26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NavigationItems\":\"NavigationItems_NavigationItems__1OGi3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DrawerToggle\":\"DrawerToggle_DrawerToggle__3N24w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"BackDrop\":\"BackDrop_BackDrop__1JARy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Burger\":\"Burger_Burger__3Iiy0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal\":\"Modal_Modal__2AlAp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"Spinner_Spinner__17jvV\",\"load3\":\"Spinner_load3__34o2t\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__1hVTH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__LfMR8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"Auth_Auth__2K71X\"};","import React from 'react';\r\nimport classes from './Logo.module.css';\r\nimport burgerLogo from '../../assets/images/burger-logo.png';\r\n\r\nconst Logo = (props) => {\r\n    console.log(Logo.prototype);\r\n    return (\r\n        <div className={classes.Logo}>\r\n            <img src={burgerLogo} alt=\"My=Burger\"/>\r\n        </div>\r\n    );\r\n}\r\nexport default Logo;","import React from 'react';\r\nimport classes from './NavigationItem.module.css';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\n\r\nconst NavigationItem = (props) => {\r\n    return (\r\n       <li className={classes.NavigationItem}>\r\n           <NavLink\r\n           to={props.link}\r\n          activeClassName={classes.active}\r\n          exact={props.exact}\r\n           >{props.children}</NavLink>\r\n       </li>\r\n    );\r\n}\r\nexport default NavigationItem;","import React, { Fragment } from 'react';\r\nimport classes from './NavigationItems.module.css';\r\nimport NavigationItem from './NavigationItem/NavigationItem';\r\n\r\n\r\nconst NavigationItems = (props) => {\r\n    return (\r\n        <ul className={classes.NavigationItems}>\r\n            <NavigationItem link={\"/\"} exact>BURGER BUILDER</NavigationItem>\r\n\r\n            {!props.isAuthenticated ?\r\n                <NavigationItem link={\"/auth\"} >Login</NavigationItem>\r\n                : <Fragment>\r\n                     <NavigationItem link={\"/orders\"} >ORDERS</NavigationItem>\r\n                    <NavigationItem link={\"/logout\"} >Logout</NavigationItem>\r\n                </Fragment>}\r\n        </ul>\r\n    );\r\n}\r\nexport default NavigationItems;","import React from 'react';\r\nimport classes from './DrawerToggle.module.css'\r\n\r\nconst DrawerToggle = (props)=>(\r\n    <div onClick={props.clicked} className={classes.DrawerToggle}>\r\n        <div></div>\r\n        <div></div>\r\n        <div></div>\r\n    </div>\r\n);\r\n\r\nexport default DrawerToggle;","import React from 'react';\r\nimport classes from './ToolBar.module.css';\r\nimport Logo from '../../Logo/Logo';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport DrawerToggle from '../SideDrawer/DrawerToggle/DrawerToggle';\r\nconst ToolBar = (props) => {\r\n    return (\r\n        <header className={classes.ToolBar}>\r\n            <DrawerToggle clicked={props.drawerToggleClicked} />\r\n            <div className={classes.Logo}>\r\n             <Logo/>\r\n            </div>\r\n            <nav className={classes.DesktopOnly}>\r\n               <NavigationItems isAuthenticated={props.isAuthenticated}/>\r\n            </nav>\r\n        </header>\r\n    );\r\n}\r\nexport default ToolBar;","import React from 'react';\r\nimport classes from './BackDrop.module.css'\r\n\r\nconst BackDrop = (props) => (\r\n    props.show ? <div className={classes.BackDrop} onClick={props.clicked}></div> : null \r\n);\r\nexport default BackDrop;","import React,{Fragment} from 'react';\r\nimport NavigationItems from '../NavigationItems/NavigationItems';\r\nimport Logo from '../../Logo/Logo';\r\nimport classes from './SideDrawer.module.css';\r\nimport BackDrop from '../../UI/BackDrop/BackDrop'\r\n\r\nconst SideDrawer = (props) => {\r\n    let attachedClasses = [classes.SideDrawer, classes.Close];\r\n    if(props.open) {\r\n        attachedClasses = [classes.SideDrawer, classes.Open];\r\n    }\r\n    return (\r\n        <Fragment>\r\n            <BackDrop show={props.open} clicked={props.closed} />\r\n            <div className={attachedClasses.join(' ')}>\r\n                <div className={classes.Logo}>\r\n                    <Logo/>\r\n                </div>\r\n                <nav>\r\n                <NavigationItems/>\r\n                </nav>\r\n            </div>\r\n        </Fragment>\r\n    )\r\n};\r\n\r\nexport default SideDrawer;","import React, { Fragment,Component } from 'react';\r\nimport classes from './Layout.module.css';\r\nimport ToolBar from '../Navigation/ToolBar/ToolBar';\r\nimport SideDrawer from '../Navigation/SideDrawer/SideDrawer';\r\nimport {connect}  from 'react-redux';\r\nclass Layout extends Component {\r\n    state = {\r\n        showSideDrawer :false\r\n    }\r\n    sideDrawerCloseHandler = ()=>{\r\n        this.setState({showSideDrawer:false});\r\n    }\r\n    sideDrawerToggleHandler = ()=>{\r\n        this.setState((prevState)=>{\r\n            return {showSideDrawer:!prevState.showSideDrawer}\r\n        });   \r\n    }\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <ToolBar drawerToggleClicked={this.sideDrawerToggleHandler} isAuthenticated={this.props.isAuthenticated}/>\r\n                <SideDrawer open={this.state.showSideDrawer} closed={this.sideDrawerCloseHandler} isAuthenticated={this.props.isAuthenticated}/>\r\n                <main className={classes.Content}>\r\n                    {this.props.children}\r\n                </main>\r\n            </Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state,ownProps)=> {\r\n    return {\r\n            isAuthenticated : state.auth.token !== null,\r\n    }\r\n}\r\nexport default connect(mapStateToProps)(Layout);","import React from 'react';\r\nimport classes from './BurgerIngredient.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BurgerIngredient = ({ type }) => {\r\n    let ingredient = null;\r\n\r\n    switch (type) {\r\n        case 'bread-bottom':\r\n            ingredient = <div className={classes.BreadBottom}></div>;\r\n            break;\r\n        case 'bread-top':\r\n            ingredient = (\r\n                <div className={classes.BreadTop}>\r\n                    <div className={classes.Seeds1}></div>\r\n                    <div className={classes.Seeds2}></div>\r\n                </div>);\r\n            break;\r\n        case 'meat':\r\n            ingredient = <div className={classes.Meat}></div>;\r\n            break;\r\n        case 'cheese':\r\n            ingredient = <div className={classes.Cheese}></div>;\r\n            break;\r\n        case 'bacon':\r\n            ingredient = <div className={classes.Bacon}></div>;\r\n            break;\r\n        case 'salad':\r\n            ingredient = <div className={classes.Salad}></div>;\r\n            break;\r\n        default:\r\n            ingredient = null;\r\n    }\r\n    return ingredient;\r\n}\r\n\r\nBurgerIngredient.propTypes = {\r\n    type: PropTypes.string.isRequired,\r\n}\r\nexport default BurgerIngredient;","import React from 'react';\r\nimport classes from './Burger.module.css';\r\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient';\r\n\r\nconst Burger = ({ ingredients}) => {\r\n    let transFormIngredients = Object.keys(ingredients).map((ingredient) =>\r\n            { \r\n                console.log([...Array(ingredients[ingredient])]);\r\n                return [...Array(ingredients[ingredient])].map((_,i)=>{\r\n                    return  <BurgerIngredient key = {ingredient+i} type={ingredient} />\r\n                })\r\n            }).reduce((arr,el)=>{return arr.concat(el)},[]);\r\n\r\n    if(transFormIngredients.length === 0) {\r\n        transFormIngredients = <p>Please start adding ingredients !</p>\r\n    }\r\n    console.log(transFormIngredients);\r\n\r\n    // const transFormIngredients = Object.keys(ingredients).map((ingredient) => {\r\n    //     console.log([...Array(ingredients[ingredient])]);\r\n    //     return [ingredient,ingredients[ingredient]];\r\n    // }).map((item)=>{\r\n    //     const count = item[1];\r\n    //     let temp = [];\r\n    //     for (let i=0;i<count;i++){\r\n    //        temp.push(<BurgerIngredient key= {item[0]+(i+1)} type={item[0]} />);\r\n    //     }\r\n    //     return temp;\r\n    // });\r\n    return (\r\n        <div className={classes.Burger}>\r\n            <BurgerIngredient type=\"bread-top\" />\r\n            {transFormIngredients}\r\n            <BurgerIngredient type=\"bread-bottom\" />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Burger;","import React from 'react';\r\nimport classes from './BuildControl.module.css';\r\n\r\nconst BuildControl  = (props)=>{\r\n    return (\r\n        <div className={classes.BuildControl}>\r\n            <div className={classes.Label}>\r\n                {props.label}\r\n            </div>\r\n            <button className={classes.Less} onClick={props.removed} disabled={props.disabled}>less </button>\r\n            <button className={classes.More} onClick={props.added}>more</button>\r\n        </div>\r\n    );\r\n};\r\nexport default BuildControl;","import React from 'react';\r\nimport classes from './BuildControls.module.css';\r\nimport BuildControl from './BuildControl/BuildControl';\r\n\r\nconst controls = [\r\n    { label: 'Salad', type: 'salad' },\r\n    { label: 'Bacon', type: 'bacon' },\r\n    { label: 'Cheese', type: 'cheese' },\r\n    { label: 'Meat', type: 'meat' },\r\n];\r\nconst BuildControls = (props) => {\r\n    return (<div className={classes.BuildControls}>\r\n        <p>Current Price : <strong>{props.price.toFixed(2)}</strong></p>\r\n        {controls.map((control) => {\r\n            return <BuildControl\r\n                key={control.label}\r\n                label={control.label}\r\n                added={() => props.ingredientAdded(control.type)}\r\n                removed={() => props.ingredientRemoved(control.type)}\r\n                disabled={props.disabled[control.type]}\r\n            />\r\n        })}\r\n        <button\r\n        className={classes.OrderButton}\r\n        disabled={!props.purchasable}\r\n        onClick={props.ordered}>{props.isAuth ? 'ORDER NOW' : 'SIGN UP '}</button>\r\n    </div>);\r\n};\r\nexport default BuildControls;","import React from 'react';\r\nimport classes from './Button.module.css';\r\nconst Button = (props)=>{\r\n    return (\r\n        <button\r\n        className={[classes.Button,classes[props.btnType]].join(' ')}\r\n        onClick={props.clicked}\r\n        >\r\n            {props.children}\r\n        </button>\r\n    )\r\n}\r\nexport default Button;","import React, { Fragment } from 'react';\r\nimport Button from '../../UI/Button/Button';\r\n\r\nconst OrderSummary = (props) => {\r\n    const ingreidentSummary = Object.keys(props.ingredients).map(\r\n        (igKey) => (\r\n            <li key={igKey}><span style={{ textTransform: 'upperCase' }}>{igKey}</span>: {props.ingredients[igKey]}</li>\r\n        )\r\n    );\r\n    console.log(\"OrderSummary\");\r\n    return (\r\n        <Fragment>\r\n            <h3>Your Order</h3>\r\n            <p>A delicous Burger with the following ingredients</p>\r\n            <ul>\r\n                {ingreidentSummary}\r\n            </ul>\r\n            <p><strong>Total Price : {props.price.toFixed(2)}</strong></p>\r\n            <p>Continue to Checkout?</p>\r\n            <Button btnType=\"Danger\" clicked={props.purchaseCanceled}>Cancel</Button>\r\n            <Button btnType=\"Success\" clicked={props.purchaseContinued}>Continue</Button>\r\n        </Fragment>\r\n    );\r\n}\r\nexport default OrderSummary;","import React, { Fragment,memo} from 'react';\r\nimport classes from './Modal.module.css';\r\nimport BackDrop from '../BackDrop/BackDrop';\r\n\r\nconst Modal = (props) => (\r\n    <Fragment>\r\n        <BackDrop show={props.show} clicked={props.modalClosed}/>\r\n        <div\r\n            className={classes.Modal}\r\n            style={{\r\n                transform: props.show ? 'translateY(0)' : 'translate(-100vh)',\r\n                opacity: props.show ? '1' : '0'\r\n            }}\r\n        >\r\n            {props.children}\r\n        </div>\r\n    </Fragment>\r\n);\r\n\r\nfunction areEqual(prevProps, nextProps) {\r\n    /*\r\n    return true if passing nextProps to render would return\r\n    the same result as passing prevProps to render,\r\n    otherwise return false\r\n    */\r\n    return !(prevProps.show !== nextProps.show || prevProps.children !== nextProps.children)\r\n  }\r\n\r\nexport default memo(Modal,areEqual);","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL:'https://burgerapp-74288.firebaseio.com/'\r\n});\r\nexport default instance;","import React from 'react';\r\nimport classes from './Spinner.module.css'\r\n\r\nconst Spinner = () => <div className={classes.Spinner}>Loading...</div>;\r\n\r\nexport default Spinner;","import React, { Component, Fragment } from 'react';\r\nimport Modal from '../components/UI/Modal/Modal';\r\n\r\n// const withErroHandler = (WrappedComponent)=>(\r\n//     (props) => (\r\n//         <WrappedComponent {...props} />\r\n//     )\r\n// );\r\n\r\n\r\nconst withErrorHandler = (WrappedComponent, axios, displayError = true) => {\r\n    return class extends Component {\r\n        state = { error: null };\r\n        requestInterceptor = axios.interceptors.request.use(null, (error) => {\r\n            this.setState({ error: error });\r\n            return Promise.reject(error);\r\n        });\r\n        responseInterceptor = axios.interceptors.response.use(null, (error) => {\r\n            if (displayError) {\r\n                this.setState({ error: error });\r\n            }\r\n            return Promise.reject(error);\r\n        });\r\n        componentDidMount() {\r\n            /** Important !!!!!!\r\n             * cannot do interceptor in this life cycle , because componentDidmount\r\n             * will only be called , once the child components are called.Hence the \r\n             * network request made in the child components mounting phase will not be \r\n             * intercepted. To avoid that we have to add interceptor in constructor \r\n             * or componentWillMount method.\r\n             * \r\n            */\r\n\r\n            //    this.requestInterceptor= axios.interceptors.request.use(null, (error) => (\r\n            //         this.setState({ error: error })\r\n            //     ));\r\n            //     this.responseInterceptor= axios.interceptors.response.use(null, (error) => (\r\n            //         this.setState({ error: error })\r\n            //     ));\r\n        }\r\n\r\n        errorConfirmedHandler = () => {\r\n            this.setState({ error: null });\r\n        }\r\n        componentWillUnmount() {\r\n            // unsubcribe to prevent memory leakes\r\n            axios.interceptors.request.eject(this.requestInterceptor);\r\n            axios.interceptors.response.eject(this.responseInterceptor);\r\n        }\r\n        render() {\r\n            console.log(\"this.requestInterceptor \", this.requestInterceptor);\r\n            return (\r\n                <Fragment>\r\n                    <Modal show={this.state.error} modalClosed={this.errorConfirmedHandler}>\r\n                        {this.state.error ? this.state.error.message : null}\r\n                    </Modal>\r\n                    <WrappedComponent {...this.props} />\r\n                </Fragment>\r\n            )\r\n        }\r\n    }\r\n};\r\nexport default withErrorHandler;\r\n\r\n","\r\nconst apiKey = process.env.REACT_APP_FIREBASE_KEY;\r\nexport {\r\n    apiKey\r\n};","import * as actionTypes from './actionTypes';\r\nimport { apiKey } from '../../fireBaseConfig';\r\nimport axios from 'axios';\r\n\r\nexport const authStart = () => {\r\n    return {\r\n        type: actionTypes.AUTH_START\r\n    }\r\n};\r\n\r\nexport const authSuccess = (idToken, userId) => {\r\n    return {\r\n        type: actionTypes.AUTH_SUCCESS,\r\n        idToken: idToken,\r\n        userId: userId\r\n    }\r\n}\r\n\r\nexport const authFail = (error) => {\r\n    return {\r\n        type: actionTypes.AUTH_FAIL,\r\n        error: error\r\n    }\r\n}\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('expirationDate');\r\n    return {\r\n        type: actionTypes.AUTH_LOGOUT\r\n    }\r\n}\r\n\r\nexport const checkAuthTimeOut = (expiry = 3600) => {\r\n    return dispatch => setTimeout(() => dispatch(logout()), expiry * 1000);\r\n};\r\n\r\nexport const setAuthRedirect = (path) => {\r\n    return {\r\n        type: actionTypes.SET_AUTH_REDIRECT,\r\n        path: path\r\n    }\r\n};\r\n\r\nexport const authCheckState = () => {\r\n    return dispatch => {\r\n        const token = localStorage.getItem('token');\r\n        const userId = localStorage.getItem('userId')\r\n        if (!token) {\r\n            dispatch(logout());\r\n        } else {\r\n            const expirationDate = new Date(localStorage.getItem('expirationDate'));\r\n            if (expirationDate < new Date()) {\r\n                dispatch(logout());\r\n            } else {\r\n                dispatch(authSuccess(token, userId));\r\n                dispatch(checkAuthTimeOut((expirationDate.getTime() - new Date().getTime())/1000));\r\n            }\r\n        }\r\n\r\n    }\r\n};\r\n\r\n//TODO: Better add sign and signup methods\r\nexport const auth = (email = 'test@gmail.com', password = '123456', isSignUp) => {\r\n    return (dispatch) => {\r\n        dispatch(authStart());\r\n        let url = `https://identitytoolkit.googleapis.com/v1/accounts:signUp?key=${apiKey}`;\r\n        if (!isSignUp) {\r\n            url = `https://identitytoolkit.googleapis.com/v1/accounts:signInWithPassword?key=${apiKey}`;\r\n        }\r\n        const authData = {\r\n            email,\r\n            password,\r\n            returnSecureToken: true\r\n        }\r\n        axios.post(url, authData).then(res => {\r\n            console.log(res);\r\n            const expirationDate = new Date(new Date().getTime() + res.data.expiresIn * 1000);\r\n            localStorage.setItem('token', res.data.idToken);\r\n            localStorage.setItem('expirationDate', expirationDate);\r\n            localStorage.setItem('userId', res.data.localId);\r\n            dispatch(authSuccess(res.data.idToken, res.data.localId));\r\n            dispatch(checkAuthTimeOut(res.data.expiresIn));\r\n        }).catch(err => {\r\n            console.log(err.response.data);\r\n            dispatch(authFail(err.response.data.error));\r\n        });\r\n    }\r\n}","const ADD_INGREDIENT = 'ADD_INGREDIENT';\r\nconst REMOVE_INGREDIENT = 'REMOVE_INGREDIENT';\r\nconst SET_INGREDIENTS = 'SET_INGREDIENTS';\r\nconst FETCH_INGREDIENTS = 'FETCH_INGREDIENTS';\r\nconst FETCH_INGREDIENTS_FAILED = 'FETCH_INGREDIENTS_FAILED';\r\n\r\nconst PURCHASE_BURGER_SUCCESS = 'PURCHASE_BURGER_SUCCESS';\r\nconst PURCHASE_BURGER_FAIL = 'PURCHASE_BURGER_FAIL';\r\nconst PURCHASE_BURGER_START = 'PURCHASE_BURGER_START';\r\nconst PURCHASE_INIT = 'PURCHASE_INIT'\r\n\r\nconst FETCH_ORDERS_SUCCESS = 'FETCH_ORDERS_SUCCESS';\r\nconst FETCH_ORDERS_FAIL = 'FETCH_ORDERS_FAIL';\r\nconst FETCH_ORDERS_START = 'FETCH_ORDERS_START';\r\n\r\nconst AUTH_START = 'AUTH_STARTS';\r\nconst AUTH_SUCCESS = 'AUTH_SUCCESS';\r\nconst AUTH_FAIL = 'AUTH_FAIL';\r\nconst AUTH_LOGOUT = 'AUTH_LOGOUT';\r\n\r\nconst SET_AUTH_REDIRECT = 'SET_AUTH_REDIRECT';\r\n\r\n\r\nexport {\r\n    ADD_INGREDIENT,\r\n    REMOVE_INGREDIENT,\r\n    SET_INGREDIENTS,\r\n    FETCH_INGREDIENTS_FAILED,\r\n    FETCH_INGREDIENTS,\r\n    PURCHASE_BURGER_SUCCESS,\r\n    PURCHASE_BURGER_FAIL,\r\n    PURCHASE_BURGER_START,\r\n    PURCHASE_INIT,\r\n    FETCH_ORDERS_SUCCESS,\r\n    FETCH_ORDERS_FAIL,\r\n    FETCH_ORDERS_START,\r\n    AUTH_START,\r\n    AUTH_SUCCESS,\r\n    AUTH_FAIL,\r\n    AUTH_LOGOUT,\r\n    SET_AUTH_REDIRECT\r\n\r\n}","import React, { Component, Fragment } from 'react';\r\nimport Burger from '../../components/Burger/Burger';\r\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\r\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\r\nimport Modal from '../../components/UI/Modal/Modal'\r\nimport axios from '../../axios-orders';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler';\r\nimport { connect } from 'react-redux';\r\nimport { removeIngredient, addIngredient, initIngredients, purchaseInit, setAuthRedirect } from '../../store/actions';\r\n\r\n// const INGREDEINT_PRICES = {\r\n//     cheese: 0.4,\r\n//     salad: 0.5,\r\n//     meat: 1.3,\r\n//     bacon: 0.7,\r\n// }\r\n\r\nclass BurgerBuilder extends Component {\r\n    state = {\r\n        // ingredients: null,\r\n        // totalPrice: 4,\r\n        // purchasable: false,\r\n        purchasing: false,\r\n        //loading: false,\r\n        // error :false,\r\n    }\r\n    componentDidMount() {\r\n        // axios.get('https://burgerapp-74288.firebaseio.com/ingredients.json').then((res) => {\r\n        //     this.setState({ ingredients: res.data })\r\n        // }).catch((error) => this.setState({error:true}));\r\n        this.props.loadIngredients();\r\n    }\r\n    updatePurchaseState(ingredients) {\r\n        const sum = Object.keys(ingredients).map((igKey) => {\r\n            return ingredients[igKey];\r\n        }).reduce((sum, el) => {\r\n            return sum + el;\r\n        }, 0);\r\n\r\n        return sum > 0;\r\n    }\r\n    // addIngredientHandler = (type) => {\r\n    //     const oldCount = this.state.ingredients[type];\r\n    //     const updatedCount = oldCount + 1;\r\n    //     const updatedIngredients = { ...this.state.ingredients };\r\n    //     updatedIngredients[type] = updatedCount;\r\n    //     const priceAddition = INGREDEINT_PRICES[type];\r\n    //     const oldPrice = this.state.totalPrice;\r\n    //     const newPrice = oldPrice + priceAddition;\r\n    //     this.setState({ ingredients: updatedIngredients, totalPrice: newPrice }, () => {\r\n    //         this.updatePurchaseState();\r\n    //     });\r\n    // }\r\n\r\n    // removeIngredientHandler = (type) => {\r\n    //     const oldCount = this.state.ingredients[type];\r\n    //     if (oldCount <= 0) {\r\n    //         return;\r\n    //     }\r\n    //     const updatedCount = oldCount - 1;\r\n    //     const updatedIngredients = { ...this.state.ingredients };\r\n    //     updatedIngredients[type] = updatedCount;\r\n    //     const priceDeduction = INGREDEINT_PRICES[type];\r\n    //     const oldPrice = this.state.totalPrice;\r\n    //     const newPrice = oldPrice - priceDeduction;\r\n    //     this.setState({ ingredients: updatedIngredients, totalPrice: newPrice }, () => {\r\n    //         this.updatePurchaseState();\r\n    //     });\r\n    // }\r\n\r\n    purchaseHandler = () => {\r\n        if (this.props.isAuth) {\r\n            this.setState({ purchasing: true });\r\n        }\r\n        else {\r\n            this.props.onSetAuthRedirect('/checkout');\r\n            this.props.history.push('/auth');\r\n        }\r\n    }\r\n\r\n    purchaseCancelHandler = () => {\r\n        this.setState({ purchasing: false });\r\n    }\r\n    purchaseContinueHandler = () => {\r\n        // const queryParams = [] ;\r\n        // for(let i in this.state.ingredients){\r\n        //     queryParams.push(encodeURIComponent(i)+'='+encodeURIComponent(this.state.ingredients[i]));\r\n        // }\r\n        // queryParams.push('price='+this.state.totalPrice);\r\n        // const queryString = queryParams.join('&');\r\n        // this.props.history.push({pathname:'/checkout',search:'?'+queryString});\r\n        this.props.onInitPurchase();\r\n        this.props.history.push('/checkout');\r\n    }\r\n    render() {\r\n        console.log(\"this.props\", this.props);\r\n        const disabledInfo = { ...this.props.ingredients };\r\n        for (let key in disabledInfo) {\r\n            disabledInfo[key] = disabledInfo[key] <= 0;\r\n        }\r\n        let orderSummary = null;\r\n\r\n        let burger = this.props.error ? <p>Ingerdients cannot be loaded!</p> : <Spinner />;\r\n        if (this.props.ingredients) {\r\n            burger = <Fragment>\r\n                <Burger ingredients={this.props.ingredients} />\r\n                <BuildControls\r\n                    ingredientAdded={this.props.onIngredientAdded}\r\n                    ingredientRemoved={this.props.onIngredientRemoved}\r\n                    disabled={disabledInfo}\r\n                    price={this.props.price}\r\n                    purchasable={this.updatePurchaseState(this.props.ingredients)}\r\n                    ordered={this.purchaseHandler}\r\n                    isAuth={this.props.isAuth}\r\n                />\r\n            </Fragment>\r\n            orderSummary = <OrderSummary\r\n                ingredients={this.props.ingredients}\r\n                purchaseCanceled={this.purchaseCancelHandler}\r\n                purchaseContinued={this.purchaseContinueHandler}\r\n                price={this.props.price}\r\n            />\r\n        }\r\n\r\n        if (this.props.isFetching) {\r\n            orderSummary = <Spinner />\r\n        }\r\n\r\n        return (\r\n            <Fragment>\r\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\r\n                    {orderSummary}\r\n                </Modal>\r\n                {burger}\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    console.log(\"ownProps\", ownProps);\r\n    return {\r\n        ingredients: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        error: state.burgerBuilder.error,\r\n        isFetching: state.burgerBuilder.isFetching,\r\n        isAuth: state.auth.token !== null\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    console.log(\"ownProps\", ownProps);\r\n    return {\r\n        // onIngredientAdded : (ingName)=> dispatch({type : actionTypes.ADD_INGREDIENT,ingeredientName: ingName}),\r\n        // onIngredientRemoved : (ingName)=> dispatch({type : actionTypes.REMOVE_INGREDIENT,ingeredientName: ingName}),\r\n        onIngredientAdded: (ingName) => dispatch(addIngredient(ingName)),\r\n        onIngredientRemoved: (ingName) => dispatch(removeIngredient(ingName)),\r\n        loadIngredients: () => dispatch(initIngredients()),\r\n        onInitPurchase: () => dispatch(purchaseInit()),\r\n        onSetAuthRedirect: (path) => dispatch(setAuthRedirect(path))\r\n    }\r\n\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(BurgerBuilder, axios));","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nconst addIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.ADD_INGREDIENT,\r\n        ingeredientName: name\r\n    }\r\n};\r\n\r\nconst removeIngredient = (name) => {\r\n    return {\r\n        type: actionTypes.REMOVE_INGREDIENT,\r\n        ingeredientName: name\r\n    }\r\n};\r\n\r\nconst setIngredients = (ingredients) => {\r\n    return {\r\n        type: actionTypes.SET_INGREDIENTS,\r\n        ingredients: ingredients\r\n    }\r\n}\r\n\r\nconst fetchIngredientsFailed = () => {\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS_FAILED\r\n    }\r\n};\r\n\r\nconst requestsIngeredients = () =>{\r\n    return {\r\n        type: actionTypes.FETCH_INGREDIENTS\r\n    }\r\n}\r\nconst initIngredients = () => {\r\n    return (dispatch) => {\r\n        dispatch(requestsIngeredients())\r\n        axios.get('https://burgerapp-74288.firebaseio.com/ingredients.json').then((res) => {\r\n            dispatch(setIngredients(res.data))\r\n        }).catch((error) =>\r\n            dispatch(fetchIngredientsFailed())\r\n        );\r\n    }\r\n}\r\nexport {\r\n    addIngredient,\r\n    removeIngredient,\r\n    initIngredients\r\n}","import * as actionTypes from './actionTypes';\r\nimport axios from '../../axios-orders';\r\n\r\nexport const purchaseInit = () => {\r\n    return {\r\n        type: actionTypes.PURCHASE_INIT\r\n    }\r\n};\r\n\r\nexport const purchaseBurgerSuccess = (id, orderData) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_SUCCESS,\r\n        orderId: id,\r\n        orderData: orderData\r\n    }\r\n};\r\n\r\nexport const purchaseBurgerFail = (error) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_FAIL,\r\n        error: error\r\n    }\r\n};\r\n\r\nexport const purchaseBurgerStart = (error) => {\r\n    return {\r\n        type: actionTypes.PURCHASE_BURGER_START\r\n    }\r\n};\r\n\r\nexport const purchaseBurger = (orderData, token) => {\r\n    return dispatch => {\r\n        dispatch(purchaseBurgerStart());\r\n        axios.post('/orders.json?auth=' + token, orderData).then(\r\n            (response) => {\r\n                dispatch(purchaseBurgerSuccess(response.data.name, orderData));\r\n            }\r\n        ).catch(error => dispatch(purchaseBurgerFail(error)))\r\n    }\r\n};\r\n\r\n\r\nexport const fetchOrdersSuccess = (orders) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_SUCCESS,\r\n        orders: orders\r\n    }\r\n};\r\n\r\nexport const fetchOrdersFail = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_FAIL,\r\n        error: error\r\n    }\r\n};\r\n\r\nexport const fetchOrdersStart = (error) => {\r\n    return {\r\n        type: actionTypes.FETCH_ORDERS_START\r\n    }\r\n};\r\n\r\nexport const fetchOrders = (token, userId) => {\r\n    return dispatch => {\r\n        dispatch(fetchOrdersStart());\r\n        const queryParams = `auth=${token}&orderBy=\"userId\"&equalTo=\"${userId}\"`;\r\n        axios.get('orders.json?' + queryParams).then((res) => {\r\n            const fetchedOrders = [];\r\n            for (let key in res.data) {\r\n                fetchedOrders.push({ ...res.data[key], id: key });\r\n            }\r\n            dispatch(fetchOrdersSuccess(fetchedOrders));\r\n        }).catch((error) => dispatch(fetchOrdersFail(error)))\r\n    }\r\n};\r\n\r\n","import React from  'react';\r\nimport Burger from '../../Burger/Burger';\r\nimport Button from '../../UI/Button/Button';\r\nimport classes from './CheckoutSummary.module.css';\r\n\r\nconst CheckoutSummary = (props)=>{\r\n    return (\r\n        <div className={classes.CheckoutSummary}>\r\n            <h1>We hope its taste well</h1>\r\n            <div style={{width : '100%',margin:'auto'}}>\r\n                <Burger ingredients={props.ingredients}/>\r\n            </div>\r\n            <Button btnType=\"Danger\" clicked={props.checkoutCancelled}>CANCEL</Button>\r\n            <Button btnType=\"Success\" clicked={props.checkoutContinued}>CONTINUE</Button>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default CheckoutSummary;","import React, { Component } from 'react';\r\nimport Button from '../../../components/UI/Button/Button';\r\nimport axios from '../../../axios-orders';\r\nimport Spinner from '../../../components/UI/Spinner/Spinner';\r\nimport classes from './ContactData.module.css';\r\nimport { connect } from 'react-redux';\r\nimport withErrorHandler from '../../../hoc/withErrorHandler';\r\nimport { purchaseBurger } from '../../../store/actions';\r\nclass ContactData extends Component {\r\n    state = {\r\n        name: '',\r\n        email: '',\r\n        address: {\r\n            street: '',\r\n            postalCode: '',\r\n        },\r\n        // loading: false,\r\n    }\r\n    orderHandler = (event) => {\r\n        event.preventDefault();\r\n        // this.setState({ loading: true });\r\n        const order = {\r\n            ingredients: this.props.ingredients,\r\n            price: this.props.price,\r\n            customer: {\r\n                name: 'cijo',\r\n                address: {\r\n                    street: 'assss',\r\n                    zipCode: '12434',\r\n                    country: 'India'\r\n                },\r\n                email: 'test@test.com'\r\n            },\r\n            deliveryMethod: 'fastest',\r\n            userId: this.props.userId\r\n        }\r\n        // axios.post('/orders.json', order).then(\r\n        //     (response) => {\r\n        //         this.setState({ loading: false});\r\n        //         this.props.history.push('/');\r\n        //     }\r\n        // ).catch(error => this.setState({ loading: false}))\r\n        this.props.orderBurger(order, this.props.token);\r\n    }\r\n    render() {\r\n        let form = <form>\r\n            <input className={classes.Input} type=\"text\" name=\"name\" placeholder=\"your name\" />\r\n            <input className={classes.Input} type=\"email\" name=\"email\" placeholder=\"your email\" />\r\n            <input className={classes.Input} type=\"text\" name=\"street\" placeholder=\"Street\" />\r\n            <input className={classes.Input} type=\"text\" name=\"post\" placeholder=\"PostalCode\" />\r\n            <Button btnType=\"Success\" clicked={this.orderHandler}>Order</Button>\r\n        </form>;\r\n\r\n        if (this.props.isFetching) {\r\n            form = <Spinner />\r\n        }\r\n        return (\r\n            <div className={classes.ContactData}>\r\n                <h4>Enter your contact data</h4>\r\n                {form}\r\n\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        ingredients: state.burgerBuilder.ingredients,\r\n        price: state.burgerBuilder.totalPrice,\r\n        isFetching: state.order.isFetching,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        orderBurger: (orderData, token) => dispatch(purchaseBurger(orderData, token))\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(ContactData, axios));","import React, { Component } from 'react';\r\nimport CheckoutSummary from '../../components/Order/CheckoutSummary/CheckoutSummary';\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport ContactData from './ContactData/ContactData';\r\nimport { connect } from 'react-redux';\r\nclass Checkout extends Component {\r\n    // state = {\r\n    //     ingredients: null,\r\n    //     price: 0,\r\n    // }\r\n    // componentWillMount() {\r\n    //     const query = new URLSearchParams(this.props.location.search);\r\n    //     const ingredients = {};\r\n    //     let price = 0;\r\n    //     for (let param of query.entries()) {\r\n    //         console.log(param);\r\n    //         if (param[0] === 'price') {\r\n    //             price = param[1];\r\n    //         } else {\r\n    //             ingredients[param[0]] = +param[1];\r\n    //         }\r\n\r\n    //     }\r\n    //     this.setState({ ingredients, price });\r\n    // }\r\n    checkoutCancelledHandler = () => {\r\n        this.props.history.goBack();\r\n    }\r\n\r\n    checkoutContinuedHandler = () => {\r\n        this.props.history.replace('/checkout/contact-data');\r\n    }\r\n    render() {\r\n        console.log(this.props.match.path);\r\n        let summary = <Redirect to=\"/\" />;\r\n        if (this.props.ingredients) {\r\n            let purchaseRedirect = this.props.purchased ? <Redirect to=\"/\" />: null;\r\n            summary = <div>{purchaseRedirect}<CheckoutSummary ingredients={this.props.ingredients}\r\n                checkoutCancelled={this.checkoutCancelledHandler}\r\n                checkoutContinued={this.checkoutContinuedHandler} />\r\n                { /*\r\n                    <Route path={this.props.match.path + '/contact-data'} render={(props) => <ContactData ingredients={this.state.ingredients} price={this.state.price} {...props} />} />\r\n                */}\r\n                <Route path={this.props.match.path + '/contact-data'} component={ContactData} />\r\n            </div >\r\n        }\r\n        return summary;\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        ingredients: state.burgerBuilder.ingredients,\r\n        purchased: state.order.purchased\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Checkout);","import React from 'react';\r\nimport classes from './Order.module.css';\r\nconst Order = (props) => {\r\n    const ingredients = [];\r\n\r\n    for (let ingredientName in props.ingredients) {\r\n        ingredients.push({\r\n            name: ingredientName,\r\n            amount: props.ingredients[ingredientName],\r\n        });\r\n    }\r\n    let ingredientOutput = ingredients.map (ig=>\r\n        <span \r\n        style={{\r\n            textTransform:'capitalize',\r\n            display:'inline-block',\r\n            margin: '0 8px',\r\n            border: '1px solid #ccc',\r\n            padding: '5px'\r\n        }}\r\n        key={ig.name}>\r\n        {ig.name} ({ig.amount})\r\n        </span>);\r\n    return (\r\n    <div className={classes.Order}>\r\n        <p>Ingredients {ingredientOutput}</p>\r\n        <p>Price <strong>{Number.parseFloat(props.price).toFixed(2)}</strong></p>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Order;","import React, { Component } from 'react';\r\nimport Order from '../../components/Order/Order';\r\nimport withErrorhandler from '../../hoc/withErrorHandler';\r\nimport axios from '../../axios-orders';\r\nimport { connect } from 'react-redux';\r\nimport { fetchOrders } from '../../store/actions'\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nclass Orders extends Component {\r\n    // state = {\r\n    //     loading:true,\r\n    //     orders:[],\r\n    // }\r\n    componentDidMount() {\r\n        // axios.get('orders.json').then((res) => {\r\n        //     const fetchedOrders = [];\r\n        //     for (let key in res.data) {\r\n        //         fetchedOrders.push({...res.data[key],id:key});\r\n        //     }\r\n        //    this.setState({loading:false,orders:fetchedOrders});\r\n        // }).catch((error) =>   this.setState({loading:false}))\r\n\r\n        this.props.onFetchOrders(this.props.token, this.props.userId);\r\n    }\r\n    render() {\r\n        console.log(this.props.orders);\r\n        let orders = <Spinner />;\r\n\r\n        if (!this.props.isFetching) {\r\n            orders = this.props.orders.map(order => {\r\n                return <Order key={order.id} ingredients={order.ingredients} price={order.price} />\r\n            });\r\n        }\r\n        return (\r\n            <div>\r\n                {orders}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        orders: state.order.orders,\r\n        isFetching: state.order.isFetching,\r\n        token: state.auth.token,\r\n        userId: state.auth.userId\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        onFetchOrders: (token, userId) => dispatch(fetchOrders(token, userId))\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorhandler(Orders, axios));","import React, { Component } from 'react';\r\nimport Button from '../../components/UI/Button/Button';\r\nimport classes from './Auth.module.css';\r\nimport { connect } from 'react-redux';\r\nimport { auth, setAuthRedirect } from '../../store/actions';\r\nimport Spinner from '../../components/UI/Spinner/Spinner';\r\nimport withErrorHandler from '../../hoc/withErrorHandler';\r\nimport { Redirect } from 'react-router-dom'\r\nimport axios from 'axios';\r\n\r\n// TODO: Add Fromik abd Yup Schema\r\nclass Auth extends Component {\r\n    state = {\r\n        isSignup: true\r\n    }\r\n    submitHandler = (event) => {\r\n        event.preventDefault();\r\n        this.props.onAuth('test@gmail.com', '123456', this.state.isSignup);\r\n    }\r\n    switchSignUpHandler = (event) => {\r\n        event.preventDefault();\r\n        this.setState(prevState => {\r\n            return { isSignup: !prevState.isSignup };\r\n        });\r\n    }\r\n    componentDidMount(){\r\n        if(!this.props.buildingBurger && this.props.authRedirectPath !== '/'){\r\n            this.props.onSetRedirectPath();\r\n        }\r\n    }\r\n    render() {\r\n\r\n        let loginForm = <form onSubmit={this.submitHandler}>\r\n            <input type=\"text\" placeholder=\"eamil\" />\r\n            <input type=\"password\" placeholder=\"password\" />\r\n            <Button btnType=\"Success\">Submit</Button>\r\n            <Button btnType=\"Danger\" clicked={this.switchSignUpHandler}>Switch To {this.state.isSignup ? 'Sign In' : 'Sign Up'}</Button>\r\n        </form>;\r\n        if (this.props.isFetching) {\r\n            loginForm = <Spinner />\r\n        }\r\n\r\n\r\n        let errorMessage = null;\r\n        if (this.props.error) {\r\n            errorMessage = <p>{this.props.error.message}</p>\r\n        }\r\n\r\n        let authRedirect = null;\r\n        if (this.props.isAuthenticated) {\r\n            authRedirect = <Redirect to={this.props.authRedirectPath} />\r\n        }\r\n        return (\r\n            <div className={classes.Auth}>\r\n                {authRedirect}\r\n                {errorMessage}\r\n                {loginForm}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return {\r\n        isFetching: state.auth.isFetching,\r\n        error: state.auth.error,\r\n        isAuthenticated: state.auth.token !== null,\r\n        buildingBurger  : state.burgerBuilder.building,\r\n        authRedirectPath: state.auth.authRedirectPath\r\n    }\r\n};\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        onAuth: (email, password, isSignup) => dispatch(auth(email, password, isSignup)),\r\n        onSetRedirectPath : ()=>dispatch(setAuthRedirect('/')),\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withErrorHandler(Auth, axios));","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../../store/actions/auth';\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nclass Logout extends Component {\r\n    componentDidMount() {\r\n        this.props.logout();\r\n    }\r\n    render() {\r\n        return (<Redirect to=\"/\" />);\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n    return {\r\n        logout: () => dispatch(logout())\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);","import React, { Component } from 'react';\r\nimport Layout from './components/Layout/Layout';\r\nimport BurgerBuilder from './containers/BurgerBuilder/BurgerBuilder';\r\nimport { Route, Switch, withRouter, Redirect } from 'react-router-dom';\r\nimport Checkout from './containers/Checkout/Checkout';\r\nimport Orders from './containers/Orders/Orders';\r\nimport Auth from './containers/Auth/Auth';\r\nimport Logout from './containers/Auth/Logout';\r\nimport { connect } from 'react-redux';\r\nimport { authCheckState } from './store/actions';\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onCheckAuth();\r\n  }\r\n  render() {\r\n    let routes = (\r\n      <Switch>\r\n        <Route path=\"/auth\" component={Auth} />\r\n        <Route path=\"/\" exact component={BurgerBuilder} />\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    );\r\n\r\n    if (this.props.isAuth) {\r\n      routes = (\r\n        <Switch>\r\n          <Route path=\"/checkout\" component={Checkout} />\r\n          <Route path=\"/orders\" component={Orders} />\r\n          <Route path=\"/logout\" component={Logout} />\r\n          <Route path=\"/auth\" component={Auth} />\r\n          <Route path=\"/\" exact component={BurgerBuilder} />\r\n          <Redirect to=\"/\" />\r\n        </Switch>);\r\n    }\r\n    return (\r\n      <Layout>\r\n        {routes}\r\n      </Layout>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch, ownProps) => {\r\n  return {\r\n    onCheckAuth: () => dispatch(authCheckState())\r\n  }\r\n}\r\nconst mapStateToProps = (state, ownProps) => {\r\n  return {\r\n    isAuth: state.auth.token !== null\r\n  }\r\n}\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(App));\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    ingredients: null,\r\n    error: false,\r\n    totalPrice: 4,\r\n    isFetching: false,\r\n    building: false,\r\n};\r\nconst INGREDEINT_PRICES = {\r\n    cheese: 0.4,\r\n    salad: 0.5,\r\n    meat: 1.3,\r\n    bacon: 0.7,\r\n}\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.ADD_INGREDIENT:\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.ingeredientName]: state.ingredients[action.ingeredientName] + 1\r\n                },\r\n                totalPrice: state.totalPrice + INGREDEINT_PRICES[action.ingeredientName],\r\n                building: true\r\n            }\r\n        case actionTypes.REMOVE_INGREDIENT:\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    ...state.ingredients,\r\n                    [action.ingeredientName]: state.ingredients[action.ingeredientName] - 1\r\n                },\r\n                totalPrice: state.totalPrice - INGREDEINT_PRICES[action.ingeredientName],\r\n                building: true\r\n            }\r\n        case actionTypes.FETCH_INGREDIENTS:\r\n            return {\r\n                ...state,\r\n                isFetching: true,\r\n            }\r\n        case actionTypes.SET_INGREDIENTS:\r\n            return {\r\n                ...state,\r\n                ingredients: {\r\n                    salad: action.ingredients.salad,\r\n                    bacon: action.ingredients.bacon,\r\n                    cheese: action.ingredients.cheese,\r\n                    meat: action.ingredients.meat,\r\n                },\r\n                totalPrice: 4,\r\n                error: false,\r\n                isFetching: false,\r\n                building: false,\r\n            }\r\n        case actionTypes.FETCH_INGREDIENTS_FAILED:\r\n            return {\r\n                ...state,\r\n                error: true,\r\n                isFetching: false,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    orders: [],\r\n    isFetching: false,\r\n    purchased: false,\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.PURCHASE_INIT:\r\n            return {\r\n                ...state,\r\n                purchased: false\r\n            }\r\n        case actionTypes.PURCHASE_BURGER_SUCCESS:\r\n            const newOrder = {\r\n                ...action.orderData,\r\n                id: action.orderId\r\n            }\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                purchased: true,\r\n                orders: state.orders.concat(newOrder),\r\n            }\r\n        case actionTypes.PURCHASE_BURGER_FAIL:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n            }\r\n        case actionTypes.PURCHASE_BURGER_START:\r\n            return {\r\n                ...state,\r\n                isFetching: true,\r\n            }\r\n        case actionTypes.FETCH_ORDERS_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n                orders: action.orders,\r\n            }\r\n        case actionTypes.FETCH_ORDERS_FAIL:\r\n            return {\r\n                ...state,\r\n                isFetching: false,\r\n            }\r\n        case actionTypes.FETCH_ORDERS_START:\r\n            return {\r\n                ...state,\r\n                isFetching: true,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import * as actionTypes from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n    token: null,\r\n    userId: null,\r\n    error: null,\r\n    isFetching: false,\r\n    authRedirectPath: '/'\r\n}\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case actionTypes.AUTH_START:\r\n            return {\r\n                ...state,\r\n                isFetching: true,\r\n            }\r\n        case actionTypes.AUTH_FAIL:\r\n            return {\r\n                ...state,\r\n                error: action.error,\r\n                isFetching: false,\r\n            }\r\n        case actionTypes.AUTH_SUCCESS:\r\n            return {\r\n                ...state,\r\n                token: action.idToken,\r\n                userId: action.userId,\r\n                error: null,\r\n                isFetching: false,\r\n            }\r\n        case actionTypes.AUTH_LOGOUT:\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                userId: null,\r\n                error: null,\r\n                isFetching: false,\r\n            }\r\n        case actionTypes.SET_AUTH_REDIRECT:\r\n            return {\r\n                ...state,\r\n                authRedirectPath:action.path\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport default reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\r\nimport burgerReducer from './store/reducers/burgerBuilder';\r\nimport orderReducer from './store/reducers/order';\r\nimport authReducer from './store/reducers/auth';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { createLogger } from 'redux-logger';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst middlewares = [thunk, createLogger()];\r\nconst rootReducer = combineReducers({\r\n    burgerBuilder: burgerReducer,\r\n    order: orderReducer,\r\n    auth: authReducer\r\n});\r\nconst store = createStore(rootReducer, composeWithDevTools(applyMiddleware(...middlewares)));\r\nconst app = (\r\n    <Provider store={store}>\r\n        <Router>\r\n            <App />\r\n        </Router>\r\n    </Provider>\r\n);\r\n\r\nReactDOM.render(app, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}